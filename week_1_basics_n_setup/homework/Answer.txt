Q1 

1. docker run -it --entrypoint=bash python:3.12.8 
2. pip --version

Q2  

Prepare for Postgres

1. Build the docker image for data ingestion: 
    docker build -t taxi_ingest:v001 .
    Since there is a different column name in this file, this image has to be rebuilt as the ingesttion script has been modified
2. Run this container which can ingest data into database: 
    docker run -it --network pg-network taxi_ingest:v001 \
        --user "root" \
        --pwd "root" \
        --host "pg-database" \
        --port "5432" \
        --db "ny_taxi" \
        --table-name "green_taxi_trips" \
        --url "https://github.com/DataTalksClub/nyc-tlc-data/releases/download/green/green_tripdata_2019-10.csv.gz"
3. Used jupyter notebook to ingest the csv. See that in upload-data.ipynb

Q3
WITH Q3 AS (
	SELECT 
		INDEX, 
		CASE WHEN trip_distance <= 1 THEN 'A'
			WHEN trip_distance <= 3 THEN 'B'
			WHEN trip_distance <= 7 THEN 'C'
			WHEN trip_distance <= 10 THEN 'D'
		ELSE 'E' END AS Dist_Cat 
	FROM public.green_taxi_trips
)
SELECT 
	Dist_Cat, count(*)
FROM Q3 
GROUP BY Dist_Cat
ORDER BY Dist_Cat

Q4

SELECT date(lpep_pickup_datetime) as pickup_date, MAX(trip_distance) as max_dist 
FROM public.green_taxi_trips
GROUP BY date(lpep_pickup_datetime) 
ORDER BY MAX(trip_distance) DESC 
LIMIT 10; 

Q5 

SELECT "PULocationID", B."Zone", SUM(total_amount) AS SUM_TOTAL 
FROM public.green_taxi_trips AS A 
LEFT JOIN public.taxi_zone AS B
ON A."PULocationID" = B."LocationID"
WHERE  date(lpep_pickup_datetime) = '2019-10-18'
GROUP BY "PULocationID", B."Zone"
HAVING SUM(total_amount) > 13000 
ORDER BY SUM(total_amount) DESC 
LIMIT 3; 

Q6 

WITH Q6 AS (
    SELECT 
        t.*, 
        p."Zone" AS pickup_zone, 
        d."Zone" AS dropoff_zone
    FROM 
        public.green_taxi_trips t
    JOIN 
        public.taxi_zone AS p ON t."PULocationID" = p."LocationID"
    JOIN 
        public.taxi_zone AS d ON t."DOLocationID" = d."LocationID"
    WHERE 
        p."Zone" = 'East Harlem North'
)
SELECT 
    dropoff_zone, 
    MAX("tip_amount") AS largest_tip
FROM 
    october_trips
GROUP BY 
    dropoff_zone
ORDER BY 
    largest_tip DESC
LIMIT 1;


Q7 
Answered :) 
